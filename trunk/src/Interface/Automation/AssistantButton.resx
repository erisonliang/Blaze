<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>